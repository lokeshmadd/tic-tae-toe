<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Tic Tac Toe</title>
    
    <style>
       

        body {
            background-image: url(jh.jpg);
            font-family: 'Arial', sans-serif;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
            background-color: aliceblue;
        }

        .container {
            
            border:5px solid black;
            border-radius: 5%;
            text-align: center;
            background-color: aliceblue;
        }

        .board {
            padding: 35px 35px;
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-gap: 5px;
            margin-top: 20px;
        }

        .cell {
            width: 100px;
            height: 100px;
            border: 2px solid #333;
            font-size: 2em;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .btn{
            padding: 12px;
            background-color: lightgreen;
            margin-bottom: 15px;
            border-radius: 8%;     
         }

         .btn:hover{
            background-color: rgb(37, 205, 37);
            cursor: pointer;
         }
        .result {
            font-size: 1.5em;
            margin-top: 10px;
            color: #333;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Tic Tac Toe</h1>
        <div id="board" class="board">
            <!-- The game board will be generated here -->
        </div>
        <p id="result" class="result"></p>
        <button class="btn"onclick="resetGame()">Reset Game</button>
    </div>

    <script>
        // Game state
        let currentPlayer = 'X';
        let gameBoard = ['', '', '', '', '', '', '', '', ''];
        let gameActive = true;

        // Function to handle cell click
        function handleCellClick(index) {
            if (gameBoard[index] === '' && gameActive) {
                gameBoard[index] = currentPlayer;
                renderBoard();
                checkWinner();
                togglePlayer();
            }
        }

        // Function to render the game board
        function renderBoard() {
            const boardElement = document.getElementById('board');
            boardElement.innerHTML = '';

            gameBoard.forEach((value, index) => {
                const cell = document.createElement('div');
                cell.classList.add('cell');
                cell.textContent = value;
                cell.addEventListener('click', () => handleCellClick(index));
                boardElement.appendChild(cell);
            });
        }

        // Function to toggle the current player
        function togglePlayer() {
            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
        }

        // Function to check for a winner
        function checkWinner() {
            const winningCombinations = [
                [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows
                [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns
                [0, 4, 8], [2, 4, 6]             // Diagonals
            ];

            for (const combination of winningCombinations) {
                const [a, b, c] = combination;
                if (gameBoard[a] && gameBoard[a] === gameBoard[b] && gameBoard[a] === gameBoard[c]) {
                    document.getElementById('result').textContent = `Player ${currentPlayer} wins!`;
                    gameActive = false;
                    return;
                }
            }

            if (!gameBoard.includes('')) {
                document.getElementById('result').textContent = 'It\'s a tie!';
                gameActive = false;
            }
        }

        // Function to reset the game
        function resetGame() {
            currentPlayer = 'X';
            gameBoard = ['', '', '', '', '', '', '', '', ''];
            gameActive = true;
            document.getElementById('result').textContent = '';
            renderBoard();
        }

        // Initial rendering of the board
        renderBoard();

    </script>
</body>

</html>
